#version 150

uniform sampler2D depth;

uniform float zNear;
uniform float zFar;

uniform vec2 pixel;

uniform mat4 proj;
uniform mat4 proj_inv;

in vec3 tri_pos;
in vec3 side_n;
in vec3 out_n;
in vec3 in_n;
in vec3 first_end;
in vec3 second_end;

void main()
{
	float z = texture2D(depth, vec2(gl_FragCoord.x * pixel.x, gl_FragCoord.y * pixel.y)).x;

	vec4 geom_world = vec4(gl_FragCoord.x*pixel.x*2.0-1.0, gl_FragCoord.y*pixel.y*2.0-1.0, z+z*z*0.5*zNear/zFar, 1.0);

	geom_world = proj_inv * geom_world;
	geom_world /= geom_world.w;
	geom_world.xyz /= 2.0;

	vec4 stencil_world = vec4(gl_FragCoord.x*pixel.x*2.0-1.0, gl_FragCoord.y*pixel.y*2.0-1.0, gl_FragCoord.z+gl_FragCoord.z*gl_FragCoord.z*0.5*zNear/zFar, 1.0);

	stencil_world = proj_inv * stencil_world;
	stencil_world /= stencil_world.w;
	stencil_world.xyz /= 2.0;

	float cull = step(dot(side_n, stencil_world.xyz), 0.0);
	vec2 col = vec2(cull, 1.0 - cull);

	vec3 rel = geom_world.xyz - tri_pos;

	float din = max(0.0, dot(rel, in_n));
	float dout = max(0.0, -dot(rel, out_n));

	float alpha = din / (din + dout);

	alpha = alpha + cull - 2.0*alpha*cull;

	alpha = max(0.0, min(1.0, alpha));

	gl_FragData[0] = vec4(col, 0.0, step(gl_FragCoord.z, z) * alpha);
}
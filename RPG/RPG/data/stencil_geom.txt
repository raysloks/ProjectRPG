#version 150

uniform mat4 proj;
uniform mat4 proj_inv;

layout(triangles) in;
layout(triangle_strip, max_vertices=6) out;

void main()
{
	vec3 cd = -vec3(1.0, -1.0, 1.0);

	vec4 real[3];
	for (int i=0;i<3;i++)
	{
		real[i] = proj_inv * gl_in[i].gl_Position;
	}

	vec3 n = normalize(cross((real[1] - real[0]).xyz, (real[2] - real[0]).xyz));

	if (dot(cd, n) > 0.0)
	{
		gl_Position = proj * (real[0] + vec4(cd, 0.0) * 1000.0);
		EmitVertex();
		gl_Position = gl_in[0].gl_Position;
		EmitVertex();
		
		gl_Position = proj * (real[1] + vec4(cd, 0.0) * 1000.0);
		EmitVertex();
		gl_Position = gl_in[1].gl_Position;
		EmitVertex();
		
		gl_Position = proj * (real[2] + vec4(cd, 0.0) * 1000.0);
		EmitVertex();
		gl_Position = gl_in[2].gl_Position;
		EmitVertex();
		
		gl_Position = proj * (real[0] + vec4(cd, 0.0) * 1000.0);
		EmitVertex();
		gl_Position = gl_in[0].gl_Position;
		EmitVertex();
	}

	EndPrimitive();
}